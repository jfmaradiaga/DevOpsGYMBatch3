name: CI/CD With Terraform and Ansible

on:
  push:
    branches:
      - Complete-CI/CD-with-Terraform-AWS

env:
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  TF_STATE_BUCKET_NAME: ${{secrets.AWS_TF_STATE_BUCKET_NAME}}
  PRIVATE_SSH_KEY: ${{secrets.AWS_SSH_KEY_PRIVATE}}
  PUBLIC_SSH_KEY: ${{secrets.AWS_SSH_KEY_PUBLIC}}
  AWS_REGION: us-east-1

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$TF_STATE_BUCKET_NAME" -backend-config="region=us-east-1"
        working-directory: ./task19
      - name: Terraform Plan
        id: plan
        run: |-
          terraform plan \
          -var="region=us-east-1" \
          -var="public_key=$PUBLIC_SSH_KEY" \
          -var="private_key=$PRIVATE_SSH_KEY" \
          -var="key_name=deployer-key" \
          -out=PLAN
        working-directory: ./task19
      - name: Terraform Apply
        id: apply
        run: terraform apply PLAN
        working-directory: ./task19

  deploy-ec2-ansible:
    runs-on: ubuntu-latest
    needs: deploy-infra
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install Ansible
        run: |
          sudo apt-get install -y ansible
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.ubuntu_SSH_PRIVATE_KEY }}
      - name: Run Ansible playbook
        run: |
          ansible-playbook playbook.yml \
            --inventory "${{ secrets.EC2_PUBLIC_IP }}," \
            --extra-vars "docker_image=jfmaradiaga/helloworld:latest ec2_public_ip=${{ secrets.EC2_PUBLIC_IP }}" \
            --connection ssh
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
